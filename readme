To run, call the Run() command from psaiduckDriver.py. It takes a JSON configuration file as the sole parameter.
The JSON file requires four parameters to function properly:
    1) username - the username you want psaiduck to log on as
    2) password - the corresponding password
    3) challengeUser - the user you want psaiduck to challenge to a random battle
    4) battleMode - can be either:
        a) "challenge" - you want psaiduck to challenge challengeUser to a battle
        b) "accept" - you want psaiduck to wait for a user (doesn't have to be challengeUser) to
                      challenge psaiduck to a battle, and accept when the challenge request is recieved.
                      
You may notice the sample JSON file includes a "battleStyle" attribute. That will be implemented soon.

The battle currently follows this flow:
  -psaiduck collects information about own active pokemon, then own benched pokemon
  -psaiduck collects information about opponents active pokemon
  -psaiduck randomly attacks
  -psaiduck waits for the next turn. If a switch is needed, psaiduck switches to the next pokemon
  -repeat until game ends, then close

Known Bugs:
-Crashes when trying to collect information about own pokemon that don't have 4 attacks (e.g. ditto, unown)
-Cannot track forced switches (e.g. roar, whirlwind). Will not crash, and will continue to work properly if manually
  changed back to mon that was forced out

Known Limitations:
-Currently can only perform random actions, and thusly is really dumb.
